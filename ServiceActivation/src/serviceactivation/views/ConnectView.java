/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package serviceactivation.views;

import javax.swing.JButton;
import javax.swing.JTextField;


/**
 *
 * @author israelagyeman-prempeh
 */
public class ConnectView extends javax.swing.JFrame {
    
    ConnectView newConnectView;

    /**
     * Creates new form ConnectView
     */
    public ConnectView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        hostIp = new javax.swing.JTextField();
        port = new javax.swing.JTextField();
        portToListenTo = new javax.swing.JTextField();
        listenBtn = new javax.swing.JButton();
        connect = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SysService-Connect");
        setMaximumSize(new java.awt.Dimension(600, 520));
        setMinimumSize(new java.awt.Dimension(600, 520));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        hostIp.setBackground(new java.awt.Color(222, 226, 230));
        hostIp.setForeground(new java.awt.Color(42, 60, 51));
        hostIp.setBorder(null);
        getContentPane().add(hostIp, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 90, 350, 30));

        port.setBackground(new java.awt.Color(222, 223, 230));
        port.setForeground(new java.awt.Color(42, 61, 51));
        port.setBorder(null);
        getContentPane().add(port, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 140, 150, 40));

        portToListenTo.setBackground(new java.awt.Color(222, 223, 230));
        portToListenTo.setForeground(new java.awt.Color(42, 61, 51));
        portToListenTo.setBorder(null);
        getContentPane().add(portToListenTo, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 280, 140, 40));

        listenBtn.setText("START SERVER");
        getContentPane().add(listenBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 290, 210, 30));

        connect.setText("CONNECT TO REMOTE");
        getContentPane().add(connect, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 150, 180, 30));

        jLabel1.setBackground(new java.awt.Color(222, 222, 222));
        jLabel1.setForeground(new java.awt.Color(42, 60, 51));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/bg-02.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConnectView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConnectView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConnectView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConnectView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                //new ConnectView().setVisible(true);
            }
        });
    }
    
    /**
     * A function that returns the host ip textfield
     * @return 
     */
    public JTextField getIp(){
        return hostIp;
    }
    
    /**
     * A function that returns the host port textfield
     * @return JTextField port
     */
    public JTextField getConnectPort(){
        return port;
    }
    
    /**
     * A function that returns the host port textfield
     * @return JTextField port
     */
    public JTextField getOpenPort(){
            return portToListenTo;
    }
    
  
    /**
     * This function returns a button to be used to create a new connection
     * @return JButton newConnection
     */
    public JButton startServerBtn(){
        return listenBtn;
    }
    
    /**
     * This function returns a button to be used to connect after details have been entered
     * @return JButton connect
     */
    public JButton connectButton(){
        return connect;
    }
    
   
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton connect;
    private javax.swing.JTextField hostIp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton listenBtn;
    private javax.swing.JTextField port;
    private javax.swing.JTextField portToListenTo;
    // End of variables declaration//GEN-END:variables
}
